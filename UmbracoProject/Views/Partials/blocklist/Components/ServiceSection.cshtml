@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockListItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    var content = (ContentModels.ServiceSection)Model.Content;
    var settings = Model.Settings as ContentModels.ServiceSettings;

    var sectionColor = settings?.ServiceBgColor?.Color ?? "#ffffff";

    //This codes gets the ServicePage and its children ServiceDetail items
    var current = Umbraco.AssignedContentItem.Root();
    var servicePage = current?.Children<ServicePage>()?.FirstOrDefault();
    var items = servicePage?.Children<ServiceDetail>()?.OrderByDescending(x => x.CreateDate).ToList() ?? [];

}

<section id="service-section" class="service" style="background-color: var(@sectionColor)">
    <div class="container">
        <div class="service-header">
            @if (settings!.ShowServiceLabel)
            {
                <h2 class="service-label">@content.ServiceLabel</h2>
            }
            <div class="rte service-title">@Html.Raw(content.ServiceTitle)</div>
        </div>
        <div class="service-grid">

            @if(items.Any())
            {
                @foreach (var item in items)
                {
                    <div class="service-card">
                        <a href="@item.Url()" class="service-card-link">
                            <h4 class="service-card-title">@item.Name</h4>
                            <img src="@(item.ServiceDetailThumbnail?.Url() ?? "~/images/risk-management.svg")" alt="@(item.Name ?? "No Service")" class="service-card-image" />
                            <p class="service-card-text">
                                @item.ServiceDetailExcerpt
                            </p>
                        </a>
                    </div>
                }
            }
            else
            {
                <p>No services available at the moment.</p>
            }
        </div>
    </div>
</section>